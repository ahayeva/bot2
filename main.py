import telebot
from telebot import types
import json
bot = telebot.TeleBot("6578062736:AAH-ybyQl_9x-MIjoAylOuMoOUyklNxbfa8")
with open('cafes.json','r', encoding='utf-8') as json_file:
    cafes_info=json.load(json_file)
ratings={}

@bot.callback_query_handler(func=lambda call: call.data.startswith(('up_', 'down_')))
def process_rating_callback(call):
    cafe_name = call.data.split('_')[1]  # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ –∫–∞—Ñ–µ –∑ –¥–∞–Ω–∏—Ö callback

    if call.data.startswith('up_'):
        ratings[cafe_name] = ratings.get(cafe_name, 0) + 1
    elif call.data.startswith('down_'):
        ratings[cafe_name] = ratings.get(cafe_name, 0) - 1

    cafe_rating = ratings.get(cafe_name, 0)

    new_text = f"–†–µ–π—Ç–∏–Ω–≥: {cafe_rating} üëç"

    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=new_text)


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é")
    item2 = types.KeyboardButton("–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫")
    markup.add(item1, item2)
    bot.reply_to(message,
                 "–ü—Ä–∏–≤—ñ—Çüëã. –Ø —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –æ–±—Ä–∞—Ç–∏ –∫–∞—Ñ–µ, –∑–∞–ª–∏—à–∏—Ç–∏ —á–µ—Å–Ω–∏–π –≤—ñ–¥–≥—É–∫ —Ç–∞ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Ç—Ä—ñ—à–∫–∏ –±—ñ–ª—å—à–µ –ø—Ä–æ –∫–æ–∂–µ–Ω –∑–∞–∫–ª–∞–¥. –©–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å?",
                 reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–µ–π—Ç–∏–Ω–≥")
def show_rating(message):
    rating_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for cafe_name in cafes_info:
        rating_markup.add(types.KeyboardButton(cafe_name))
    rating_markup.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))
    bot.reply_to(message, "–í–∏–±–µ—Ä–∏ –∫–∞—Ñ–µ, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –π–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥:", reply_markup=rating_markup)

import telebot
from telebot import types
import json

bot = telebot.TeleBot("6578062736:AAH-ybyQl_9x-MIjoAylOuMoOUyklNxbfa8")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ JSON-—Ñ–∞–π–ª—É
with open('cafes.json', 'r', encoding='utf-8') as json_file:
    cafes_info = json.load(json_file)

# –ó–∞–ª–∏—à–∞—î–º–æ –≤–∞—à –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –∫–æ–¥ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —ñ–Ω—à–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π

# ...

# –ö–æ–¥ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–∞—Ñ–µ
@bot.message_handler(func=lambda message: message.text in cafes_info.keys())
def show_cafe_info(message):
    cafe_name = message.text
    cafe_info = cafes_info[cafe_name]
    cafe_rating = ratings.get(cafe_name, 0)
    info_text = f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {cafe_name}:\n"
    for key, value in cafe_info.items():
        if key != "–§–æ—Ç–æ":
            info_text += f"{key}: {value}\n"
    info_text += f"–†–µ–π—Ç–∏–Ω–≥: {cafe_rating} üëç\n"
    rating_markup = types.InlineKeyboardMarkup()
    thumbs_up = types.InlineKeyboardButton("üëç", callback_data=f"up_{cafe_name}")
    thumbs_down = types.InlineKeyboardButton("üëé", callback_data=f"down_{cafe_name}")
    rating_markup.add(thumbs_up, thumbs_down)

    @bot.callback_query_handler(func=lambda call: call.data.startswith(('up_', 'down_')))
    def process_rating_callback(call):
        cafe_name = call.data.split('_')[1]
        if call.data.startswith('up_'):
            ratings[cafe_name] = ratings.get(cafe_name, 0) + 1
        elif call.data.startswith('down_'):
            ratings[cafe_name] = ratings.get(cafe_name, 0) - 1
        cafe_rating = ratings.get(cafe_name, 0)
        new_text = f"–†–µ–π—Ç–∏–Ω–≥: {cafe_rating} üëç"
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=new_text)
        bot.send_message(call.message.chat.id, "–î—è–∫—É—é –∑–∞ –≤–∞—à—É –æ—Ü—ñ–Ω–∫—É!")

    bot.send_photo(message.chat.id, cafe_info.get("–§–æ—Ç–æ"))
    bot.reply_to(message, info_text, reply_markup=rating_markup)


@bot.message_handler(func=lambda message: message.text == "–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫")
def leave_review(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for cafe_name in cafes_info:
        markup.add(types.KeyboardButton(cafe_name))
    markup.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))

    bot.reply_to(message, "–í–∏–±–µ—Ä–∏ –∫–∞—Ñ–µ, –¥–ª—è —è–∫–æ–≥–æ —Ö–æ—á–µ—à –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in cafes_info.keys())
def ask_for_review(message):
    cafe_name = message.text
    bot.reply_to(message, f"–í–≤–µ–¥—ñ—Ç—å –≤—ñ–¥–≥—É–∫ –¥–ª—è –∫–∞—Ñ–µ '{cafe_name}':")

@bot.message_handler(func=lambda message: message.text != "–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫" and message.text != "–ù–∞–∑–∞–¥")
def save_review(message):
    cafe_name = message.text
    review = message.text
    if cafe_name in cafes_info:
        cafes_info[cafe_name]["–í—ñ–¥–≥—É–∫–∏"].append(review)
        with open('cafes.json', 'w', encoding='utf-8') as json_file:
            json.dump(cafes_info, json_file, ensure_ascii=False, indent=4)
    markup = types.ReplyKeyboardRemove()
    bot.reply_to(message, f"–î—è–∫—É—é –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫ –¥–ª—è –∫–∞—Ñ–µ '{cafe_name}'!", reply_markup=markup)
    bot.send_message(message.chat.id, "–ß–∏–º —â–µ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?")

# –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –±–æ—Ç–∞
bot.polling()

